--- 
GENERATOR: 
  PackageName: nk
  PackageDescription: "Package nk provides Go bindings for nuklear.h"
  PackageLicense: "THE AUTOGENERATED LICENSE. ALL THE RIGHTS ARE RESERVED BY ROBOTS."
  Includes: ["nuklear.h", "nuklear_glfw_gl3.h"]
  FlagGroups:
    - {name: CFLAGS, flags: [
      -DNK_INCLUDE_FIXED_TYPES
      -DNK_INCLUDE_STANDARD_IO
      -DNK_INCLUDE_DEFAULT_ALLOCATOR
      -DNK_INCLUDE_FONT_BAKING
      -DNK_INCLUDE_DEFAULT_FONT
      -Wno-implicit-function-declaration
    ]}

PARSER: 
  IncludePaths: ["/usr/include", "/usr/local/include"]
  SourcesPaths: ["nk/nuklear.h", "nk/nuklear_glfw_gl3.h"]
  # SourcesPaths: ["nk/nuklear.h", "nk/nuklear_sdl.h"]
  Defines:
    NK_INCLUDE_FIXED_TYPES: 1
    NK_INCLUDE_STANDARD_IO: 1
    NK_INCLUDE_DEFAULT_ALLOCATOR: 1
    NK_INCLUDE_FONT_BAKING: 1
    NK_INCLUDE_DEFAULT_FONT: 1
    __APPLE__: 1
    # __APPLE_CC__: 1

TRANSLATOR: 
  ConstRules: 
    defines: expand
  MemTips:
    - {target: "draw_begin$", self: raw}
    - {target: "draw_end$", self: raw}
    - {target: "item_getter$", self: raw}
    - {target: "value_getter$", self: raw}
    - {target: "_user", self: bind}
    - {target: "nk_", self: raw}
    - {target: "SDL_", self: raw}
    - {target: "glfw", self: raw}
  TypeTips:
    function:
      - {target: _(hsv|rgb)_bv$, tips: [plain,plain,plain,0]}
      - {target: _(hsv|rgb)a_bv$, tips: [plain,plain,plain,0]}
      - {target: _(hsv|rgb)_b$, tips: [plain,plain,plain,0]}
      - {target: _(hsv|rgb)a_b$, tips: [plain,plain,plain,0]}
  PtrTips:
    function:
      - {target: "_color_fv$", tips: [arr,0]}
      - {target: "_color_dv$", tips: [arr,0]}
      - {target: "_color_hex_rgba$", tips: [arr,0]}
      - {target: "_color_hex_rgb$", tips: [arr,0]}
      - {target: "_color_hsv_iv$", tips: [arr,0]}
      - {target: "_color_hsv_bv$", tips: [arr,0]}
      - {target: "_color_hsv_fv$", tips: [arr,0]}
      - {target: "_color_hsva_iv$", tips: [arr,0]}
      - {target: "_color_hsva_bv$", tips: [arr,0]}
      - {target: "_color_hsva_fv$", tips: [arr,0]}
      - {target: "nk_", tips: [sref,sref,sref,sref,sref,sref]} # defaults
  Rules: 
    global: 
      - {transform: lower}
      - {action: accept, from: "^nk_"}
      - {action: replace, from: sdl_, to: SDL_}
      - {action: replace, from: glfw, to: GLFW}
      - {transform: export}
    const:
      - {action: accept, from: "^NK_"}
      - {action: replace, from: "^Nk_", to: _}

      - {action: ignore, from: _INT8}
      - {action: ignore, from: _UINT8}
      - {action: ignore, from: _INT16}
      - {action: ignore, from: _UINT16}
      - {action: ignore, from: _INT32}
      - {action: ignore, from: _UINT32}
      - {action: ignore, from: _FLOAT}
      - {action: ignore, from: _SIZE_TYPE}
      - {action: ignore, from: _POINTER_TYPE}
      - {action: ignore, from: _API}
      - {action: ignore, from: _INTERN}
      - {action: ignore, from: _STORAGE}
      - {action: ignore, from: _GLOBAL}

      - {action: replace, from: ^_command_, to: _command_type_}
      - {action: replace, from: "_rgb$", to: _color_format_RGB}
      - {action: replace, from: "_rgba$", to: _color_format_RGBA}
    function:
      - {action: ignore, from: "(?i)nk_str"}
      - {action: ignore, from: "_input_glyph"}
    type:   
      - {action: replace, from: "^Nk_", to: _}
      - {action: replace, from: "_t$"}
    private:
      - {transform: unexport}
    post-global: 
      - {action: replace, from: _$}
      - {load: snakecase}
